services:
  node_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: node_app_container
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://admin:password@mongodb:27017
    depends_on:
      - mongodb
    restart: always
    command: ["node", "server.js"]

  mongodb:
    image: mongo:latest
    container_name: mongodb_container
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_container
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      # - ./alerts.yml:/etc/prometheus/alerts.yml
    ports:
      - "9090:9090"
    depends_on:
      - node_app
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana_container
    ports:
      - "3001:3000"
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    depends_on:
      - prometheus
    restart: unless-stopped

  # alertmanager:
  #   image: prom/alertmanager:latest
  #   container_name: alertmanager_container
  #   ports:
  #     - "9093:9093"
  #   volumes:
  #     - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
  #   depends_on:
  #     - prometheus
  #   restart: unless-stopped

volumes:
  mongodb_data:


# services:
#   node_app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: node_app_container
#     ports:
#       - "3000:3000"
#     environment:
#       - NODE_ENV=development
#       - MONGO_URI=mongodb://admin:password@mongodb:27017/restaurantApp?authSource=admin
#     depends_on:
#       - mongodb
#     restart: always
#     command: ["node", "server.js"]

#   mongodb:
#     image: mongo:latest
#     container_name: mongodb_container
    
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: admin
#       MONGO_INITDB_ROOT_PASSWORD: password
    
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongodb_data:/data/db

# volumes:
#   mongodb_data:





# # version: "3.8"
# # services:
# #   node_app:
# #     build:
# #       context: .
# #       dockerfile: Dockerfile
# #     container_name: node_app_container
# #     ports:
# #       - "5000:5000"
# #     volumes:
# #       - .:/usr/src/app
# #     environment:
# #       - NODE_ENV=development
# #     depends_on:
# #       - mongodb
# #     restart: always

# #   mongodb:
# #     image: mongo:latest
# #     container_name: mongodb_container
# #     ports:
# #       - "27017:27017"
# #     volumes:
# #       - mongodb_data:/data/db

# # volumes:
# #   mongodb_data:

# # version: '3.8'

# # services:
# #   mongodb:
# #     image: mongo:latest
# #     container_name: mongo_container
# #     restart: always
# #     environment:
# #       MONGO_INITDB_ROOT_USERNAME: root
# #       MONGO_INITDB_ROOT_PASSWORD: Jestinod98661
# #       MONGO_INITDB_DATABASE: restaurant
# #     ports:
# #       - "27017:27017"
# #     volumes:
# #       - mongo_data:/data/db

# #   nodeapp:
# #     build: .
# #     container_name: node_app_container
# #     restart: always
# #     depends_on:
# #       - mongodb
# #     ports:
# #       - "5000:5000"
# #     environment:
# #       DB_USER: root
# #       DB_PASSWORD: Jestinod98661
# #       DB_NAME: restaurant
# #       DB_HOST: mongodb
# #       DB_PORT: 27017

# # volumes:
# #   mongo_data:

# # # version: '3.8'

# # services:
# #   postgres:
# #     image: postgres:latest
# #     container_name: postgres_container
# #     restart: always
# #     environment:
# #       POSTGRES_USER: postgres
# #       POSTGRES_PASSWORD: jestinod98661
# #       POSTGRES_DB: restaurant
# #     ports:
# #       - "5432:5432"
# #     volumes:
# #       - postgres_data:/var/lib/postgresql/data

# #   nodeapp:
# #     build: .
# #     container_name: node_app_container
# #     restart: always
# #     depends_on:
# #       - postgres
# #     ports:
# #       - "3000:3000"
# #     environment:
# #       DB_USER: postgres
# #       DB_PASSWORD: jestinod98661
# #       DB_NAME: restaurant
# #       # DB_HOST: postgres
# #       DB_HOST: host.docker.internal
# #       DB_PORT: 5432

# # volumes:
# #   postgres_data:

